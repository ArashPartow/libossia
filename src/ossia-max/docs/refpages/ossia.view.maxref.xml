<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="ossia.view" module="max" category="Ossia">

	<digest>
		Bind to a model patcher
	</digest>

	<description>
		<o>ossia.view</o> allows to bind to a model patcher and define a scope to the ossia.remotes at the same level patcher or below to automatically bind to corresponding ossia.parameters
	</description>

	
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">Ossia</metadata>
		<metadata name="tag">Ossia</metadata>
		<metadata name="tag">Network</metadata>
	</metadatalist>

	
	<!--INLETS-->
	<inletlist>
			<inlet id="0" name="Message input" type="any">
			<digest>Messages to ossia.model</digest>
			<description>Messages to the node</description>
		</inlet>
	</inletlist>


	<!--OUTLETS-->
	<outletlist>
			<outlet id="0" name="Info outlet" type="any">
			<digest>Various information messages</digest>
			<description>Messages and information in reply to various messages</description>
		</outlet>
	</outletlist>

	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="Address to bind to" optional="0" type="symbol">
			<digest>
				The address of the node (model) to bind this view to
			</digest>
			<description>
				<o>ossia.view</o> requires an argument defining a node name in the ossia namespace to which it will bind. This will define the scope to which the ossia.remotes at the same level patcher or below will automatically bind to corresponding ossia.parameters.  
				This argument is mandatory, and each <o>ossia.view</o> within a upper-level model, device or client must have a unique name.
			</description>
		</objarg>
	</objarglist>	
	
	<methodlist>
		<method name="address">
			<arglist>
				<arg name="Address to bind to" optional="1" type="list" />
			</arglist>
			<digest>
				The address of the node (model) to bind this view to
			</digest>
			<description>
				The <m>address</m> message followed a node address in the Ossia namespace will make the view bind to the specified node (model)
			</description>
		</method>
	</methodlist>

	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="description" get="1" set="1" type="atom" size="1">
			<digest>
				Set description to node
			</digest>
			<description>
				The <at>description</at> attribute allows to set a description to a node
			</description>
		</attribute>
		
		<attribute name="invisible" get="1" set="1" type="int" size="1">
			<digest>
				Hide node from remote client
			</digest>
			<description>
				The <at>invisible</at> attribute allows to hide a model from remote clients - this can be useful e.g. for "internal" that we don't want to give access to.
			</description>
		</attribute>
		
		<attribute name="priority" get="1" set="1" type="int" size="1">
			<digest>
				Set priority
			</digest>
			<description>
				The <at>priority</at> attribute allows to order how several values of a same hierarchical level can be recalled 
			</description>
		</attribute>

		<attribute name="recall_safe" get="1" set="1" type="boolean" size="1">
			<digest>
				Enable or disable value update when recalling preset
			</digest>
			<description>
				The <a>recall_safe</a> attribute (default: off) allows to prevent value update when recalling a preset. This can be handy for example in live situation to prevent a model or parameter state to be recalled while being controlled by some processes (manual control, mapping, etc.)
			</description>
		</attribute>
		
		<attribute name="tags" get="1" set="1" type="atom" size="1">
			<digest>
				Tags associated with this node
			</digest>
			<description>
				The <at>tags</at> attribute allows to associate a variable number of tags for this node. This helps documenting the parameter.
			</description>
		</attribute>

		<attribute name="trim_address" get="1" set="1" type="boolean" size="1">
			<digest>
				Output absolute or relative address path
			</digest>
			<description>
				The <a>trim_address</a> attribute sets whether the address is output as a relative or absolute path
			</description>
		</attribute>
		
	</attributelist>		

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="ossia.model"/>
		<seealso name="ossia.remote"/>
		<seealso name="ossia.client"/>
	</seealsolist>

	
</c74object>
