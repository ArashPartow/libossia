trigger:
- master

stages:
  - stage: Build
    jobs: 
      - job: Linux        
        pool:
          vmImage: 'ubuntu-20.04'

        steps:
        - bash: |
            sudo apt install -qq -y build-essential g++ ninja-build 
          displayName: Dependencies
        
        - bash: |
            cd $(System.DefaultWorkingDirectory)
            mkdir build
            cd build
            cmake -GNinja $(Build.SourcesDirectory) -DOSSIA_UNITY3D_ONLY=1 -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release
            cmake --build . 
            cmake --build . --target install
          displayName: Build
        
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: $(System.DefaultWorkingDirectory)/build/install
            artifactName: libossia-linux

      - job: macOS        
        pool:
          vmImage: 'macos-10.14'

        steps:
        - bash: |
            brew install ninja
          displayName: Dependencies
        
        - bash: |
            cd $(System.DefaultWorkingDirectory)
            mkdir build
            cd build
            cmake -GNinja $(Build.SourcesDirectory) -DOSSIA_UNITY3D_ONLY=1 -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release
            cmake --build . 
            cmake --build . --target install
          displayName: Build
        
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: $(System.DefaultWorkingDirectory)/build/install
            artifactName: libossia-macos
            
      - job: Win32        
        pool:
          vmImage: 'windows-2019'

        steps:
        ## Install packages ##
        - script: |
            cinst -y ninja
        
        ## Build ##
        - script: |
            pushd "C:\Program Files (x86)\Microsoft Visual Studio\Installer\"
            for /f "delims=" %%x in ('.\vswhere.exe -latest -property InstallationPath') do set VSPATH=%%x
            popd
            call "%VSPATH%\VC\Auxiliary\Build\vcvarsall.bat" x64
            
            cd $(System.DefaultWorkingDirectory)
            mkdir build
            cd build
            cmake -GNinja $(Build.SourcesDirectory) -DCMAKE_CXX_COMPILER="cl.exe" -DCMAKE_C_COMPILER="cl.exe" -DOSSIA_UNITY3D_ONLY=1 -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release
            cmake --build . 
            cmake --build . --target install
          displayName: Build
        
        ## Assemble ##
        # Publish the artefacts
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: $(System.DefaultWorkingDirectory)/build/install
            artifactName: libossia-win32
  
  - stage: assemble
    jobs: 
      - job: deps        
        pool:
          vmImage: 'ubuntu-20.04'

        steps:      
        # Download them to the Linux system
        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: libossia-win32
            path: $(System.DefaultWorkingDirectory)/win32
        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: libossia-macos
            path: $(System.DefaultWorkingDirectory)/macos
        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: libossia-linux
            path: $(System.DefaultWorkingDirectory)/linux
        
        - bash: |
            cd $(Build.SourcesDirectory)
            cd build
            find .
          displayName: Package
        
  ## Deploy ##
        
      