trigger:
- master

stages:
  - stage: build
    jobs: 
      - job: build
        strategy:
          matrix:
            linux:
              imageName: 'ubuntu-20.04'
            mac:
              imageName: 'macos-10.14'
            windows:
              imageName: 'windows-2019'
        
        steps:
        ## Install packages ##
        - bash: |
            sudo apt install -qq -y build-essential g++ ninja-build 
          displayName: Dependencies
          condition: eq( variables['Agent.OS'], 'Linux' )
        - bash: |
            brew install ninja
          displayName: Dependencies
          condition: eq( variables['Agent.OS'], 'Darwin' )
        - powershell: |
            cinst -y ninja
          condition: eq( variables['Agent.OS'], 'Windows_NT' )
        
        ## Build ##
        - bash: |
            cd $(System.DefaultWorkingDirectory)
            mkdir build
            cd build
            cmake -GNinja $(Build.SourcesDirectory) -DOSSIA_UNITY3D_ONLY=1 -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release
            cmake --build . 
            cmake --build . --target install
          displayName: Build
        
        ## Assemble ##
        # Publish the artefacts
        - task: PublishPipelineArtifact@1
          condition: eq( variables['Agent.OS'], 'Windows_NT' )
          inputs:
            targetPath: $(System.DefaultWorkingDirectory)/build/install
            artifactName: libossia-win32
        - task: PublishPipelineArtifact@1
          condition: eq( variables['Agent.OS'], 'Darwin' )
          inputs:
            targetPath: $(System.DefaultWorkingDirectory)/build/install
            artifactName: libossia-macos
        - task: PublishPipelineArtifact@1
          condition: eq( variables['Agent.OS'], 'Darwin' )
          inputs:
            targetPath: $(System.DefaultWorkingDirectory)/build/install
            artifactName: libossia-linux
  
  - stage: assemble
    jobs: 
      - job: deps
        strategy:
          matrix:
            linux:
              imageName: 'ubuntu-20.04'
        steps:      
        # Download them to the Linux system
        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: libossia-win32
            path: $(System.DefaultWorkingDirectory)/win32
        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: libossia-macos
            path: $(System.DefaultWorkingDirectory)/macos
        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: libossia-linux
            path: $(System.DefaultWorkingDirectory)/linux
        
        - bash: |
            cd $(Build.SourcesDirectory)
            cd build
            find .
          displayName: Package
        
  ## Deploy ##
        
      