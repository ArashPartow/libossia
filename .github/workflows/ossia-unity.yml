name: ossia-unity

on: push

jobs:
  Unity3DLinux:
    runs-on: ubuntu-latest
    name: Unity3D (Linux)

    steps:
    - uses: actions/checkout@v4
    - name: Install Build Dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -yqq build-essential gcc-11 g++-11 ninja-build libavahi-client-dev
    - name: Build
      env: 
        CC: gcc-11
        CXX: g++-11
      run: |
        cmake  -B build -S ${GITHUB_WORKSPACE} -GNinja -DOSSIA_UNITY3D_ONLY=1 -DOSSIA_CI=1 -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release
        cmake --build build
        cmake --build build --target install 
    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: ossia-unity
        path: install

  Unity3DMac:
    name: Unity3D (macOS)
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/latest-mac-toolchain
    - name: Install Dependencies
      run: |
        brew install ninja
    - name: Build
      run: |
        cmake -B build -S ${GITHUB_WORKSPACE} -GNinja \
          -DOSSIA_UNITY3D_ONLY=1 \
          -DCMAKE_INSTALL_PREFIX=install \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"
        cmake --build build
        cmake --build build --target install 
    - name: Code Signing
      shell: bash
      env:
        MAC_CERT_B64: ${{ secrets.MAC_CERT_B64 }}
        MAC_CERT_PASSWORD: ${{ secrets.MAC_CERT_PASSWORD }}
        MAC_ALTOOL_PASSWORD: ${{ secrets.MAC_ALTOOL_PASSWORD }}
      run: |
        # Setup codesigning
        # Thanks https://www.update.rocks/blog/osx-signing-with-travis/
        (
          set +x
          KEY_CHAIN=build.keychain
          echo "$MAC_CERT_B64" | base64 --decode > ossia-cert.p12

          security create-keychain -p azure $KEY_CHAIN
          security default-keychain -s $KEY_CHAIN
          security unlock-keychain -p azure $KEY_CHAIN
          security import ossia-cert.p12 -k $KEY_CHAIN -P "$MAC_CERT_PASSWORD" -T /usr/bin/codesign;
          security set-key-partition-list -S apple-tool:,apple: -s -k azure $KEY_CHAIN

          rm -rf *.p12
        )

        security unlock-keychain -p azure build.keychain

        (
          cd install
          codesign --force --timestamp --sign "ossia.io" ossia/Plugins/macos/ossia.dylib

          zip ossia-unity.zip ossia/Plugins/macos/ossia.dylib
          xcrun altool \
                --notarize-app \
                -t osx \
                -f "ossia-unity.zip" \
                --primary-bundle-id "io.ossia.ossia-unity" \
                -u jeanmichael.celerier@gmail.com -p "@env:MAC_ALTOOL_PASSWORD"
          rm ossia-unity.zip
        )

    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: ossia-unity
        path: install
    environment: 'Apple Certificate'

  Unity3DIOs:
    name: Unity3D (iOS)
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/latest-mac-toolchain
    - name: Install Dependencies
      run: |
        brew install ninja
    - name: Initialize iOS toolchain
      run: |
        cd ${GITHUB_WORKSPACE}
        git submodule update --init 3rdparty/ios-cmake
    - name: Build
      run: |
        export CMAKE_MAKE_PROGRAM=`command -v ninja`
        echo 'CMAKE_MAKE_PROGRAM $CMAKE_MAKE_PROGRAM'
        cmake -B build -S ${GITHUB_WORKSPACE} \
          -GNinja \
          -DOSSIA_UNITY3D_ONLY=1 \
          -DOSSIA_CI=1 \
          -DCMAKE_INSTALL_PREFIX=install \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_TOOLCHAIN_FILE=${GITHUB_WORKSPACE}/3rdparty/ios-cmake/ios.toolchain.cmake \
          -DPLATFORM=OS64 \
          -DENABLE_BITCODE=1 \
          -DCMAKE_MAKE_PROGRAM=${CMAKE_MAKE_PROGRAM}
        cmake --build build
        cmake --build build --target install
    - name: Code Signing
      shell: bash
      env:
        MAC_CERT_B64: ${{ secrets.MAC_CERT_B64 }}
        MAC_CERT_PASSWORD: ${{ secrets.MAC_CERT_PASSWORD }}
        MAC_ALTOOL_PASSWORD: ${{ secrets.MAC_ALTOOL_PASSWORD }}
      run: |
        # Setup codesigning
        # Thanks https://www.update.rocks/blog/osx-signing-with-travis/
        (
          set +x
          KEY_CHAIN=build.keychain
          echo "$MAC_CERT_B64" | base64 --decode > ossia-cert.p12

          security create-keychain -p azure $KEY_CHAIN
          security default-keychain -s $KEY_CHAIN
          security unlock-keychain -p azure $KEY_CHAIN
          security import ossia-cert.p12 -k $KEY_CHAIN -P "$MAC_CERT_PASSWORD" -T /usr/bin/codesign;
          security set-key-partition-list -S apple-tool:,apple: -s -k azure $KEY_CHAIN

          rm -rf *.p12
        )

        security unlock-keychain -p azure build.keychain

        (
          cd install
          codesign --force --timestamp --sign "ossia.io" ossia/Plugins/ios/ossia.a

          zip ossia-unity.zip ossia/Plugins/ios/ossia.a
          xcrun altool \
                --notarize-app \
                -t ios \
                -f "ossia-unity.zip" \
                --primary-bundle-id "io.ossia.ossia-unity" \
                -u jeanmichael.celerier@gmail.com -p "@env:MAC_ALTOOL_PASSWORD"
          rm ossia-unity.zip
        )
    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: ossia-unity-ios
        path: install
    environment: 'Apple Certificate'
      
  Unity3DWin32:
    name: Unity3D (Win32)
    runs-on: 'windows-latest'

    steps:
    - uses: actions/checkout@v4
    - name: Install Dependencies
      run: choco install -y ninja
    - name: Build
      shell: cmd
      run: |
        call ci\msvc.bat

        cmake -B build -S %GITHUB_WORKSPACE% -GNinja -DOSSIA_CI=1 -DOSSIA_UNITY3D_ONLY=1 -DCMAKE_SYSTEM_VERSION=7 -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release
        cmake --build build
        cmake --install build

    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: ossia-unity
        path: install

  upload_release:
    runs-on: ubuntu-latest
    needs: [ Unity3DLinux, Unity3DMac, Unity3DIOs, Unity3DWin32 ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: ossia-unity
          path: ossia
      - name: Rezip
        shell: bash
        run: |
          ls
          SHORT=${GITHUB_REF:11} # remove the 'refs/tags/' prefix
          SLUG=${SHORT//\//_} # replace '/' with '_'
          zip -r ossia-unity-${SLUG}.zip ossia
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ossia-unity*.zip
