name: ossia-cpp

on: push

jobs:
  cpp-linux:
    runs-on: ubuntu-latest
    name: CPP (Linux)

    steps:
    - uses: actions/checkout@v2
    - name: Install Build Dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -yqq build-essential gcc-11 g++-11 ninja-build libavahi-client-dev
    - name: Build
      env: 
        CC: gcc-11
        CXX: g++-11
      run: |
        cmake  -B build -S ${GITHUB_WORKSPACE} -GNinja \
          -DOSSIA_CPP_ONLY=1 \
          -DCMAKE_INSTALL_PREFIX=install \
          -DCMAKE_BUILD_TYPE=Release \
          -DOSSIA_CI=1 \
          -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"
        cmake --build build
        cmake --build build --target install 
    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: ossia-cpp
        path: install

  cpp-mac:
    name: CPP (macOS)
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Dependencies
      run: |
        brew install ninja
    - name: Build
      run: |
        cmake -B build -S ${GITHUB_WORKSPACE} -GNinja -DOSSIA_CPP_ONLY=1 -DOSSIA_CI=1 -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release
        cmake --build build
        cmake --build build --target install 
    - name: Code Signing
      shell: bash
      env:
        MAC_CERT_B64: ${{ secrets.MAC_CERT_B64 }}
        MAC_CERT_PASSWORD: ${{ secrets.MAC_CERT_PASSWORD }}
        MAC_ALTOOL_PASSWORD: ${{ secrets.MAC_ALTOOL_PASSWORD }}
      run: |
        source ${GITHUB_WORKSPACE}/ci/codesign_functions.sh
        release_macos_folder "${GITHUB_WORKSPACE}/install" "$PWD/ossia-cpp-osx.zip" "io.ossia.ossia-cpp"

    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: ossia-cpp
        path: install
    environment: 'Apple Certificate'
      
  cpp-windows:
    name: CPP (Windows)
    runs-on: 'windows-latest'

    steps:
    - uses: actions/checkout@v2
    - name: Install Dependencies
      run: cinst -y ninja
    - name: Build
      shell: cmd
      run: |
        call ci\msvc.bat

        cmake -B build -S %GITHUB_WORKSPACE% -GNinja -DOSSIA_CI=1 -DOSSIA_CPP_ONLY=1 -DCMAKE_SYSTEM_VERSION=7 -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=Release
        cmake --build build
        cmake --install build

    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: ossia-cpp
        path: install

  upload_release:
    runs-on: ubuntu-latest
    needs: [ cpp-linux, cpp-mac, cpp-windows ]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: ossia-cpp
          path: ossia
      - name: Rezip
        shell: bash
        run: |
          ls
          SHORT=${GITHUB_REF:11} # remove the 'refs/tags/' prefix
          SLUG=${SHORT//\//_} # replace '/' with '_'
          zip -r ossia-cpp-${SLUG}.zip ossia
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ossia-cpp*.zip