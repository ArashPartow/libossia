name: libossia

on: push

jobs:
  build-macos:
    runs-on: macos-14
    environment: 'Apple Certificate'
    strategy:
      matrix:
        static: [0, 1]
        build_type: [Release, Debug]
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/latest-mac-toolchain
    - name: Build
      env: 
        STATIC: ${{ matrix.static }}
        BUILD_TYPE: ${{ matrix.build_type }}
      run: | 
        cmake -B build -S ${GITHUB_WORKSPACE} -GNinja \
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
          -DOSSIA_STATIC=$STATIC \
          -DCMAKE_INSTALL_PREFIX=install \
          -DOSSIA_TESTING=1 \
          -DOSSIA_CI=1 \
          -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"
        cmake --build build
        cmake --build build --target test
        cmake --build build --target install

    - uses: ./.github/actions/mac-codesign
      with:
        path-to-sign: lib
        MAC_CERT_B64: ${{ secrets.MAC_CERT_B64 }}
        MAC_CERT_PASSWORD: ${{ secrets.MAC_CERT_PASSWORD }}
        MAC_ALTOOL_PASSWORD: ${{ secrets.MAC_ALTOOL_PASSWORD }}

    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: libossia-shared-release-macos
        path: install

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        static: [0, 1]
        build_type: [Release, Debug]
      fail-fast: false
    steps:
    - uses: actions/checkout@v4

    - uses: ./.github/actions/latest-msvc-toolchain

    - name : Build
      shell: cmd
      env: 
        STATIC: ${{ matrix.static }}
        BUILD_TYPE: ${{ matrix.build_type }}
      run: |
        cmake -B build -S %GITHUB_WORKSPACE% -GNinja -DOSSIA_PCH=0 -DCMAKE_SYSTEM_VERSION=7 -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=%BUILD_TYPE% -DOSSIA_STATIC=%STATIC% -DOSSIA_CI=1 -DOSSIA_TESTING=1
        cmake --build build
        cmake --build build --target test
        cmake --install build

    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: libossia-shared-release-windows
        path: install

  build-linux_x86:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        static: [0, 1]
        build_type: [Release, Debug]
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - name: Install Dependencies
      run: | 
        sudo apt-get update -yqq 
        sudo apt-get upgrade -yqq
        sudo apt-get install -yqq build-essential g++-11 gcc-11 ninja-build libavahi-client-dev
    - name: Build
      env: 
        STATIC: ${{ matrix.static }}
        BUILD_TYPE: ${{ matrix.build_type }}
        CC: gcc-11
        CXX: g++-11

      run: | 
        cmake -B build -S ${GITHUB_WORKSPACE} -GNinja \
          -DCMAKE_INSTALL_PREFIX=install \
          -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
          -DOSSIA_STATIC=$STATIC \
          -DOSSIA_CI=1 \
          -DOSSIA_TESTING=1
        cmake --build build
        cmake --build build --target test
        cmake --build build --target install 
    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: libossia-shared-release-linux
        path: install

  build-linux_rpi:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        static: [0, 1]
        build_type: [Release, Debug]
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
    - uses: ./.github/actions/latest-rpi-toolchain
    - name: Build
      env: 
        STATIC: ${{ matrix.static }}
        BUILD_TYPE: ${{ matrix.build_type }}
      run: |
        export CTEST_OUTPUT_ON_FAILURE=1
        # export RPI_ROOT_PATH=/opt/cross-pi-gcc
        # export PKG_CONFIG_SYSROOT_DIR=$RPI_ROOT_PATH
        # export PKG_CONFIG_LIBDIR=${RPI_ROOT_PATH}/usr/lib/pkgconfig:${RPI_ROOT_PATH}/usr/share/pkgconfig:${RPI_ROOT_PATH}/usr/lib/arm-linux-gnueabihf/pkgconfig/
        export PATH=/opt/cross-pi-gcc/bin:${PATH}
        export LD_LIBRARY_PATH=/opt/cross-pi-gcc/lib:${LD_LIBRARY_PATH}

        cmake -B build -S ${GITHUB_WORKSPACE} \
            -DCMAKE_TOOLCHAIN_FILE="/opt/cross-pi-gcc/aarch64-rpi3-linux-gnu.toolchain.cmake" \
            -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
            -DOSSIA_STATIC=$STATIC \
            -DCMAKE_INSTALL_PREFIX=install \
            -DOSSIA_CI=1
        cmake --build build
        cmake --build build --target install
    - name: Archive Package
      uses: actions/upload-artifact@v2
      with:
        name: libossia-shared-release-rpi
        path: install
