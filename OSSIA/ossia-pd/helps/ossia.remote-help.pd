#N canvas 543 429 460 160 10;
#N canvas 705 471 496 264 localDevice 0;
#X obj 126 78 ossia.remote foo;
#X floatatom 71 79 5 0 0 0 - - -, f 5;
#X obj 123 140 ossia.param foo;
#X floatatom 123 122 5 0 0 0 - - -, f 5;
#X floatatom 123 162 5 0 0 0 - - -, f 5;
#N canvas 476 175 450 300 view 0;
#X obj 154 103 ossia.remote bar;
#X floatatom 114 104 5 0 0 0 - - -, f 5;
#X obj 143 198 ossia.view sub;
#X text 20 53 you can double click on a remote to locate its associated
osssia.param;
#X connect 0 0 1 0;
#X connect 1 0 0 0;
#X restore 311 80 pd view;
#N canvas 0 151 450 300 model 0;
#X floatatom 161 58 5 0 0 0 - - -, f 5;
#X floatatom 161 98 5 0 0 0 - - -, f 5;
#X obj 161 76 ossia.param bar;
#X obj 164 183 ossia.model sub;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 311 131 pd model;
#X obj 315 181 ossia.remote /sub/bar;
#X floatatom 270 182 5 0 0 0 - - -, f 5;
#X text 269 162 you can use an absolute address;
#X text 35 17 Here the remote connects to a local device and a local
parameter \, it acts more or less like a send/receive pair.;
#X text 39 219 There is no [ossia.device] here so all ossia objects
register themselves to the default global device - see [ossia] for
more on that, f 74;
#X connect 0 0 1 0;
#X connect 1 0 0 0;
#X connect 2 0 4 0;
#X connect 3 0 2 0;
#X connect 7 0 8 0;
#X connect 8 0 7 0;
#X restore 102 62 pd localDevice;
#N canvas 307 374 473 124 ossia/ø 0;
#X text 62 56 ossia.theNameOftheObject;
#X text 47 28 all ossia-pd objects can indifferently be named:;
#X text 63 76 ø.theNameOftheObject;
#X restore 373 125 pd ossia/ø;
#X text 20 14 [ø.remote] allows to monitor and remote-control any
OSSIA parameter:, f 69;
#X text 22 39 - declared in Pd with [ø.param] and [ø.model];
#X text 29 100 - but also on other OSSIA devices \, on the same computer
or remotely - see ø.client for that., f 68;
#X text 59 62 as in:;
